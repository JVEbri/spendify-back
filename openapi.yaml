openapi: 3.0.0
info:
  title: API de Autenticación
  description: API para manejar autenticación con Google
  version: 1.0.0
  contact:
    name: Tu Nombre
    url: https://tusitio.com
    email: tu@email.com
servers:
  - url: http://localhost:3001
    description: Servidor local
tags: []
paths:
  /auth/google:
    get:
      operationId: AuthController_googleLogin
      parameters: []
      responses:
        '302':
          description: Redirección a Google
      summary: Iniciar sesión con Google
      tags:
        - Autenticación
  /auth/google/callback:
    get:
      operationId: AuthController_googleCallback
      parameters: []
      responses:
        '200':
          description: Usuario autenticado con éxito
      summary: Callback de Google
      tags:
        - Autenticación
  /auth/refresh:
    post:
      operationId: AuthController_refresh
      parameters: []
      responses:
        '201':
          description: ''
      tags:
        - Autenticación
  /auth/login:
    post:
      operationId: AuthController_login
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginDto'
      responses:
        '200':
          description: Login correcto
        '401':
          description: Credenciales inválidas
      tags:
        - Autenticación
  /mail/send:
    post:
      operationId: MailController_sendMail
      parameters: []
      responses:
        '201':
          description: ''
      tags:
        - Mail
  /groups:
    post:
      operationId: GroupsController_createGroup
      parameters: []
      responses:
        '201':
          description: ''
      tags:
        - Groups
    get:
      operationId: GroupsController_getGroups
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - Groups
  /invitations/{token}:
    get:
      operationId: InvitationsController_getInvitation
      parameters:
        - name: token
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - Invitations
  /invitations:
    post:
      operationId: InvitationsController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInvitationDto'
      responses:
        '201':
          description: ''
      tags:
        - Invitations
  /invitations/accept:
    post:
      operationId: InvitationsController_acceptInvitation
      parameters: []
      responses:
        '201':
          description: ''
      tags:
        - Invitations
  /expenses/{id}:
    put:
      operationId: ExpensesController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - Expenses
    delete:
      operationId: ExpensesController_delete
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - Expenses
  /expenses/group/{groupId}:
    get:
      operationId: ExpensesController_findByGroup
      parameters:
        - name: groupId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - Expenses
  /expenses:
    post:
      operationId: ExpensesController_create
      parameters: []
      responses:
        '201':
          description: ''
      tags:
        - Expenses
  /expenses/group/{groupId}/meta/add:
    patch:
      operationId: ExpensesController_addMetaColumn
      parameters:
        - name: groupId
          required: true
          in: path
          schema:
            type: string
        - name: month
          required: true
          in: query
          schema:
            type: number
        - name: year
          required: true
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
      tags:
        - Expenses
  /expenses/group/{groupId}/meta/remove:
    patch:
      operationId: ExpensesController_removeMetaColumn
      parameters:
        - name: groupId
          required: true
          in: path
          schema:
            type: string
        - name: month
          required: true
          in: query
          schema:
            type: number
        - name: year
          required: true
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
      tags:
        - Expenses
  /expenses/group/{groupId}/meta/rename:
    patch:
      operationId: ExpensesController_renameMetaColumn
      parameters:
        - name: groupId
          required: true
          in: path
          schema:
            type: string
        - name: month
          required: true
          in: query
          schema:
            type: number
        - name: year
          required: true
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
      tags:
        - Expenses
  /users/me:
    get:
      operationId: UsersController_getProfile
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - Users
  /users:
    get:
      operationId: UsersController_findAll
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - Users
    post:
      operationId: UsersController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserDto'
      responses:
        '201':
          description: ''
      tags:
        - Users
  /users/{id}:
    get:
      operationId: UsersController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - Users
    put:
      operationId: UsersController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserDto'
      responses:
        '200':
          description: ''
      tags:
        - Users
    delete:
      operationId: UsersController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - Users
components:
  securitySchemes:
    bearer:
      scheme: bearer
      bearerFormat: JWT
      type: http
  schemas:
    LoginDto:
      type: object
      properties: {}
    CreateInvitationDto:
      type: object
      properties: {}
    CreateUserDto:
      type: object
      properties: {}
    UpdateUserDto:
      type: object
      properties: {}
